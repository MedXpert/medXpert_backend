# Generated by Django 4.0.4 on 2022-05-30 13:05

import datetime
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import phonenumber_field.modelfields
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('houseNumber', models.CharField(max_length=10)),
                ('kebele', models.IntegerField()),
                ('subCity', models.CharField(max_length=50)),
                ('regionOrCity', models.CharField(max_length=50)),
                ('country', models.CharField(max_length=70)),
            ],
        ),
        migrations.CreateModel(
            name='Admin',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('firstName', models.CharField(max_length=50)),
                ('lastName', models.CharField(max_length=50)),
                ('email', models.CharField(max_length=100)),
                ('phoneNumber', phonenumber_field.modelfields.PhoneNumberField(max_length=128, region=None, unique=True)),
                ('username', models.CharField(max_length=50, unique=True)),
                ('password', models.CharField(max_length=50)),
                ('profilePicture', models.ImageField(upload_to='')),
                ('creationDateTime', models.DateTimeField(blank=True, default=datetime.datetime.now)),
            ],
        ),
        migrations.CreateModel(
            name='AmbulanceService',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('branch', models.CharField(max_length=100)),
                ('description', models.CharField(max_length=200)),
                ('averageRating', models.FloatField()),
                ('GPSCoordinates', models.CharField(max_length=100)),
                ('verificationStatus', models.CharField(max_length=50)),
                ('website', models.CharField(max_length=100)),
                ('email', models.CharField(max_length=100)),
                ('phoneNumber', phonenumber_field.modelfields.PhoneNumberField(max_length=128, region=None, unique=True)),
                ('source', models.CharField(max_length=100)),
                ('imageGallery', models.ImageField(upload_to='')),
                ('tags', models.CharField(max_length=100)),
                ('creationDateTime', models.DateTimeField(blank=True, default=datetime.datetime.now)),
                ('additionalAttributes', models.CharField(max_length=500)),
            ],
        ),
        migrations.CreateModel(
            name='Automations',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.CharField(max_length=200)),
                ('triggers', models.CharField(max_length=100)),
                ('actions', models.CharField(max_length=100)),
                ('isActive', models.CharField(max_length=100)),
                ('creationDateTime', models.DateTimeField(blank=True, default=datetime.datetime.now)),
                ('tags', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='HealthCareFacility',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('branch', models.CharField(max_length=100)),
                ('description', models.CharField(max_length=500)),
                ('averageRating', models.FloatField()),
                ('GPSCoordinates', models.CharField(max_length=100)),
                ('verificationStatus', models.CharField(max_length=50)),
                ('website', models.CharField(max_length=100)),
                ('email', models.CharField(max_length=100)),
                ('phoneNumber', phonenumber_field.modelfields.PhoneNumberField(max_length=128, region=None, unique=True)),
                ('source', models.CharField(max_length=100)),
                ('imageGallery', models.ImageField(upload_to='')),
                ('tags', models.CharField(max_length=100)),
                ('creationDateTime', models.DateTimeField(blank=True, default=datetime.datetime.now)),
                ('type', models.CharField(max_length=100)),
                ('services', models.CharField(max_length=100)),
                ('capacity', models.CharField(max_length=100)),
                ('doctorCount', models.IntegerField()),
                ('averageNumberOfUsers', models.FloatField()),
                ('additionalAttributes', models.CharField(max_length=500)),
            ],
        ),
        migrations.CreateModel(
            name='HealthProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('weight', models.FloatField(max_length=3)),
                ('height', models.FloatField(max_length=3)),
                ('healthConditions', models.CharField(max_length=500)),
            ],
        ),
        migrations.CreateModel(
            name='HeartRateHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dateTime', models.DateTimeField()),
                ('reading', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='SleepHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField()),
                ('hours', models.TimeField()),
            ],
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('completed', models.BooleanField(blank=True, default=False, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='UserReview',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('review', models.CharField(max_length=200)),
                ('healthFacilityType', models.CharField(max_length=100)),
                ('creationDateTime', models.DateTimeField(blank=True, default=datetime.datetime.now)),
                ('lastUpdateTime', models.DateTimeField(blank=True, default=datetime.datetime.now)),
                ('healthFacilityID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.healthcarefacility')),
            ],
        ),
        migrations.CreateModel(
            name='UserRating',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.IntegerField()),
                ('healthFacilityType', models.CharField(max_length=100)),
                ('creationDateTime', models.DateTimeField(blank=True, default=datetime.datetime.now)),
                ('lastUpdateTime', models.DateTimeField(blank=True, default=datetime.datetime.now)),
                ('healthFacilityID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.healthcarefacility')),
            ],
        ),
        migrations.CreateModel(
            name='ReviewComment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.CharField(max_length=200)),
                ('creationDateTime', models.DateTimeField(blank=True, default=datetime.datetime.now)),
                ('lastUpdateTime', models.DateTimeField(blank=True, default=datetime.datetime.now)),
                ('UserReviewID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.userreview')),
                ('commenterID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.userrating')),
            ],
        ),
        migrations.CreateModel(
            name='HealthFacilityAccount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('healthFacilityType', models.CharField(max_length=100)),
                ('username', models.CharField(max_length=50, unique=True)),
                ('email', models.CharField(max_length=100)),
                ('password', models.CharField(max_length=50)),
                ('creationDateTime', models.DateTimeField(blank=True, default=datetime.datetime.now)),
                ('logo', models.ImageField(upload_to='')),
                ('additionalAttributes', models.CharField(max_length=500)),
                ('healthFacilityOrAmbulanceID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.ambulanceservice')),
            ],
        ),
        migrations.CreateModel(
            name='HealthCareService',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('service', models.CharField(max_length=100)),
                ('Row3', models.CharField(max_length=100)),
                ('healthCareFacilityID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.healthcarefacility')),
            ],
        ),
        migrations.AddField(
            model_name='healthcarefacility',
            name='accountID',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.healthfacilityaccount'),
        ),
        migrations.AddField(
            model_name='healthcarefacility',
            name='address',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.admin'),
        ),
        migrations.CreateModel(
            name='ClaimRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('requesterPhoneNumber', phonenumber_field.modelfields.PhoneNumberField(max_length=128, region=None)),
                ('requesterFirstName', models.CharField(max_length=100)),
                ('requesterLastName', models.CharField(max_length=100)),
                ('requesterEmail', models.CharField(max_length=100)),
                ('message', models.CharField(max_length=500)),
                ('attachment', models.FileField(upload_to='')),
                ('status', models.CharField(max_length=50)),
                ('isDone', models.CharField(max_length=50)),
                ('dateTime', models.DateTimeField(default=django.utils.timezone.now)),
                ('cancelDateTime', models.DateTimeField()),
                ('healthFacilityID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.healthcarefacility')),
            ],
        ),
        migrations.CreateModel(
            name='Appointment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('healthFacilityType', models.CharField(max_length=100)),
                ('dateTime', models.DateTimeField()),
                ('status', models.CharField(max_length=50)),
                ('healthFacilityID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.healthcarefacility')),
            ],
        ),
        migrations.AddField(
            model_name='ambulanceservice',
            name='accountID',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.healthcarefacility'),
        ),
        migrations.AddField(
            model_name='ambulanceservice',
            name='address',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.admin'),
        ),
        migrations.CreateModel(
            name='Ambulance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('healthFacilityType', models.CharField(max_length=100)),
                ('driverFirstName', models.CharField(max_length=100)),
                ('driverLastName', models.CharField(max_length=100)),
                ('isAvailable', models.BooleanField(default=True)),
                ('username', models.CharField(max_length=50, unique=True)),
                ('email', models.CharField(max_length=100, unique=True)),
                ('password', models.CharField(max_length=50)),
                ('phoneNumber', phonenumber_field.modelfields.PhoneNumberField(max_length=128, region=None, unique=True)),
                ('additionalAttributes', models.CharField(max_length=500)),
                ('accountID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.healthfacilityaccount')),
                ('healthFacilityID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.ambulanceservice')),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('uid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True, verbose_name='Public identifier')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('firstName', models.CharField(max_length=30)),
                ('lastName', models.CharField(max_length=30)),
                ('phoneNumber', models.CharField(blank=True, max_length=10)),
                ('sex', models.CharField(choices=[('m', 'male'), ('f', 'female')], default='m', max_length=1, null=True)),
                ('dateOfBirth', models.DateField(blank=True, null=True)),
                ('role', models.CharField(choices=[('ad', 'Admin'), ('h', 'HealthFacility'), ('am', 'Ambulance'), ('u', 'User')], default='u', max_length=3, null=True)),
                ('isActive', models.BooleanField(default=True)),
                ('isDeleted', models.BooleanField(default=False)),
                ('createdDate', models.DateTimeField(default=django.utils.timezone.now)),
                ('modifiedDate', models.DateTimeField(default=django.utils.timezone.now)),
                ('createdBy', models.EmailField(max_length=254)),
                ('modifiedBy', models.EmailField(max_length=254)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
            },
        ),
    ]
